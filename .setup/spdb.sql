
CREATE TABLE IF NOT EXISTS bot (
    ID INTEGER NOT NULL,
    DefaultGame VARCHAR(512),
    DefaultPrefix VARCHAR(32),
    Permissions INTEGER NOT NULL DEFAULT 0,
    UserName VARCHAR(256),
    Avatar VARCHAR(2048),
    PRIMARY KEY (ID)
);

INSERT INTO bot
SELECT * FROM (SELECT 0, 'DEFAULT', 'z.', 0, 'spe.zy', NULL)
WHERE NOT EXISTS (
    SELECT ID FROM bot WHERE ID = 0
) LIMIT 1;

CREATE TABLE IF NOT EXISTS servers (
    ID INTEGER NOT NULL,
    DisplayName VARCHAR(2048) NOT NULL,
    TwitchChannel INTEGER NOT NULL DEFAULT 0,
    ActivityLogChannel INTEGER NOT NULL DEFAULT 0,
    UseAMS BOOLEAN NOT NULL DEFAULT 0,
    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS timeouts (
    ID INTEGER PRIMARY KEY,
    ServerID INTEGER NOT NULL,
    MemberID INTEGER NOT NULL,
    TimeoutTime TIMESTAMP NOT NULL,
    TimeInMinutes INTEGER NOT NULL,
    TimeoutCount INTEGER NOT NULL,
    Enabled BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY (ServerID) REFERENCES servers(ID),
    FOREIGN KEY (MemberID) REFERENCES users(ID)
);

CREATE TABLE IF NOT EXISTS users (
    ID INTEGER NOT NULL,
    TimeoutCount INTEGER NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS twitch (
    ID INTEGER PRIMARY KEY,
    UserID INTEGER NOT NULL,
    ServerID INTEGER NOT NULL,
    LastStream TIMESTAMP,
    FOREIGN KEY (ServerID) REFERENCES servers(ID)
);

CREATE TABLE IF NOT EXISTS apb_news_feed (
    ID INTEGER NOT NULL,
    ChannelID INTEGER NOT NULL,
    PostID INTEGER NOT NULL,
    ShowMods BOOLEAN NOT NULL DEFAULT 1,
    PRIMARY KEY (ID),
    FOREIGN KEY (ID) REFERENCES servers(ID)
);

CREATE TABLE IF NOT EXISTS lfg (
    RoleID INTEGER NOT NULL,
    ServerID INTEGER NOT NULL,
    PRIMARY KEY (RoleID),
    FOREIGN KEY (ServerID) REFERENCES servers(ID)
);

CREATE TABLE IF NOT EXISTS AMSlog (
    ID INTEGER NOT NULL,
    ServerID INTEGER NOT NULL,
    ChannelID INTEGER NOT NULL,
    UserID INTEGER NOT NULL,
    Message TEXT,
    MentionEveryone BOOLEAN NOT NULL,
    Timestamp TIMESTAMP NOT NULL,
    IsEmbed BOOLEAN NOT NULL DEFAULT 0,
    PRIMARY KEY (ID),
    FOREIGN KEY (ServerID) REFERENCES servers(ID),
    FOREIGN KEY (UserID) REFERENCES users(ID)
);

CREATE TABLE IF NOT EXISTS AMSBlacklist (
    ID INTEGER PRIMARY KEY,
    ServerID INTEGER NOT NULL,
    Blacklisted TEXT NOT NULL,
    FOREIGN KEY (ServerID) REFERENCES servers(ID)
);
